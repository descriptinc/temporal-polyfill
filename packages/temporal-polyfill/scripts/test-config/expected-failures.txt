
####################################################################################################
# AFTER REFACTOR
####################################################################################################

# internal CalendarProtocol receiving options. undefined or not?
built-ins/Temporal/PlainDate/compare/calendar-datefromfields-called-with-options-undefined.js
built-ins/Temporal/PlainDate/prototype/equals/calendar-datefromfields-called-with-options-undefined.js
built-ins/Temporal/PlainDate/prototype/since/calendar-datefromfields-called-with-options-undefined.js
built-ins/Temporal/PlainDate/prototype/toPlainMonthDay/calendar-arguments.js
built-ins/Temporal/PlainDate/prototype/toPlainMonthDay/calendar-monthdayfromfields-called-with-options-undefined.js
built-ins/Temporal/PlainDate/prototype/toPlainYearMonth/calendar-arguments.js
built-ins/Temporal/PlainDate/prototype/toPlainYearMonth/calendar-yearmonthfromfields-called-with-options-undefined.js
built-ins/Temporal/PlainDate/prototype/until/calendar-datefromfields-called-with-options-undefined.js
built-ins/Temporal/PlainDateTime/prototype/toPlainMonthDay/calendar-monthdayfromfields-called-with-options-undefined.js
built-ins/Temporal/PlainDateTime/prototype/toPlainYearMonth/calendar-yearmonthfromfields-called-with-options-undefined.js
built-ins/Temporal/PlainDateTime/prototype/withPlainDate/calendar-datefromfields-called-with-options-undefined.js
built-ins/Temporal/PlainDateTime/prototype/toPlainMonthDay/calendar-arguments.js
built-ins/Temporal/PlainDateTime/prototype/toPlainYearMonth/calendar-arguments.js
built-ins/Temporal/ZonedDateTime/prototype/toPlainMonthDay/calendar-arguments.js
built-ins/Temporal/ZonedDateTime/prototype/toPlainMonthDay/calendar-monthdayfromfields-called-with-options-undefined.js
built-ins/Temporal/ZonedDateTime/prototype/toPlainYearMonth/calendar-arguments.js
built-ins/Temporal/ZonedDateTime/prototype/toPlainYearMonth/calendar-yearmonthfromfields-called-with-options-undefined.js
built-ins/Temporal/ZonedDateTime/prototype/until/calendar-dateuntil-called-with-copy-of-options.js
built-ins/Temporal/ZonedDateTime/prototype/withPlainDate/calendar-datefromfields-called-with-options-undefined.js
built-ins/Temporal/PlainTime/prototype/toPlainDateTime/calendar-datefromfields-called-with-options-undefined.js
built-ins/Temporal/PlainTime/prototype/toZonedDateTime/calendar-datefromfields-called-with-options-undefined.js
built-ins/Temporal/PlainYearMonth/compare/calendar-yearmonthfromfields-called-with-options-undefined.js
built-ins/Temporal/PlainYearMonth/prototype/equals/calendar-yearmonthfromfields-called-with-options-undefined.js
built-ins/Temporal/PlainYearMonth/prototype/since/calendar-yearmonthfromfields-called-with-options-undefined.js
built-ins/Temporal/PlainYearMonth/prototype/until/calendar-yearmonthfromfields-called-with-options-undefined.js
built-ins/Temporal/PlainYearMonth/prototype/with/calendar-arguments.js

# FIX: dateUntil options should pass-through rando options
built-ins/Temporal/PlainDateTime/prototype/since/calendar-dateuntil-called-with-copy-of-options.js
built-ins/Temporal/PlainDateTime/prototype/until/calendar-dateuntil-called-with-copy-of-options.js
built-ins/Temporal/PlainDateTime/prototype/with/calendar-options.js
built-ins/Temporal/ZonedDateTime/prototype/since/calendar-dateuntil-called-with-copy-of-options.js
built-ins/Temporal/ZonedDateTime/prototype/with/calendar-options.js

# getPossibleInstantsFor wants plainDateTimes that sometimes have calendar. instead, always give iso
built-ins/Temporal/PlainDate/prototype/toZonedDateTime/timezone-getpossibleinstantsfor.js

# optional params and func/class.length
built-ins/Temporal/PlainDate/length.js
built-ins/Temporal/PlainDateTime/length.js
built-ins/Temporal/ZonedDateTime/length.js
built-ins/Temporal/PlainTime/length.js

# sanitychecking calendar/timezone results
built-ins/Temporal/PlainDate/prototype/since/rounding-zero-year-month-week-length.js
built-ins/Temporal/PlainDate/prototype/until/rounding-zero-year-month-week-length.js
built-ins/Temporal/PlainDateTime/prototype/since/rounding-zero-year-month-week-length.js
built-ins/Temporal/PlainDateTime/prototype/until/rounding-zero-year-month-week-length.js
built-ins/Temporal/ZonedDateTime/prototype/since/rounding-zero-year-month-week-length.js
built-ins/Temporal/ZonedDateTime/prototype/until/rounding-zero-year-month-week-length.js
built-ins/Temporal/PlainYearMonth/prototype/since/rounding-zero-year-month-length.js
built-ins/Temporal/PlainYearMonth/prototype/until/rounding-zero-year-month-length.js

####################################################################################################
# Options parsing
####################################################################################################

# accessing options multiple times. this is why CopyDataProperties exists
# ALSO, diff options should be snapshotted probably
built-ins/Temporal/PlainDateTime/from/order-of-operations.js
built-ins/Temporal/PlainDateTime/prototype/with/order-of-operations.js
built-ins/Temporal/PlainDateTime/prototype/since/order-of-operations.js
built-ins/Temporal/PlainDateTime/prototype/until/order-of-operations.js
built-ins/Temporal/PlainTime/prototype/since/order-of-operations.js
built-ins/Temporal/PlainTime/prototype/until/order-of-operations.js

####################################################################################################
# Temporary
####################################################################################################

# Misc access wrong-order
built-ins/Temporal/Calendar/prototype/dateAdd/order-of-operations.js
built-ins/Temporal/Calendar/prototype/dateUntil/order-of-operations.js
built-ins/Temporal/PlainDate/from/order-of-operations.js
built-ins/Temporal/PlainDate/prototype/add/order-of-operations.js
built-ins/Temporal/PlainDate/prototype/subtract/order-of-operations.js
built-ins/Temporal/PlainDate/prototype/with/order-of-operations.js
built-ins/Temporal/PlainDateTime/prototype/add/order-of-operations.js
built-ins/Temporal/PlainDateTime/prototype/subtract/order-of-operations.js
built-ins/Temporal/PlainMonthDay/from/order-of-operations.js
built-ins/Temporal/PlainMonthDay/prototype/with/order-of-operations.js
built-ins/Temporal/PlainYearMonth/from/order-of-operations.js
built-ins/Temporal/PlainYearMonth/prototype/with/order-of-operations.js
built-ins/Temporal/TimeZone/prototype/getInstantFor/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/add/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/subtract/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/toPlainMonthDay/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/toPlainYearMonth/order-of-operations.js

####################################################################################################
# Misc CALENDAR non-compliance
####################################################################################################

# RoundDuration expects: get dateAdd, get dateUntil, call dateUntil, call dateAdd (weird!)
built-ins/Temporal/Duration/prototype/round/order-of-operations.js
built-ins/Temporal/Duration/prototype/total/order-of-operations.js

####################################################################################################
# Misc TIMEZONE non-compliance
####################################################################################################

# not caching reference to `TimeZoneProtocol::getOffsetNanosecondsFor` when doing `computeGapNear`
built-ins/Temporal/ZonedDateTime/from/argument-propertybag-ambiguous-wall-clock-time.js
built-ins/Temporal/PlainDate/prototype/toZonedDateTime/order-of-operations.js
built-ins/Temporal/PlainDateTime/prototype/toZonedDateTime/order-of-operations.js
built-ins/Temporal/PlainTime/prototype/toZonedDateTime/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/withPlainDate/order-of-operations.js

# not caching reference to `TimeZoneProtocol::getOffsetNanosecondsFor` for Duration operations
built-ins/Temporal/Duration/prototype/add/relativeto-propertybag-ambiguous-wall-clock-time.js
built-ins/Temporal/Duration/prototype/round/relativeto-propertybag-ambiguous-wall-clock-time.js
built-ins/Temporal/Duration/prototype/subtract/relativeto-propertybag-ambiguous-wall-clock-time.js
built-ins/Temporal/Duration/prototype/total/relativeto-propertybag-ambiguous-wall-clock-time.js
built-ins/Temporal/Duration/compare/relativeto-propertybag-ambiguous-wall-clock-time.js

# not caching reference to `TimeZoneProtocol::getOffsetNanosecondsFor` for ZonedDateTime operations
built-ins/Temporal/ZonedDateTime/compare/argument-propertybag-ambiguous-wall-clock-time.js
built-ins/Temporal/ZonedDateTime/prototype/equals/argument-propertybag-ambiguous-wall-clock-time.js
built-ins/Temporal/ZonedDateTime/prototype/round/rounding-is-noop.js
built-ins/Temporal/ZonedDateTime/prototype/since/argument-propertybag-ambiguous-wall-clock-time.js
built-ins/Temporal/ZonedDateTime/prototype/until/argument-propertybag-ambiguous-wall-clock-time.js

####################################################################################################
# Handling crazy results from CALENDAR
####################################################################################################

# Duration::round has an exhaustive algorithm for if dateUntil gives (artificial) results that don't...
# advance d1 all the way to d2. ignore this contrived case
built-ins/Temporal/Duration/prototype/round/nanoseconds-to-days-precision-exact-mathematical-values-2.js
# similar...
built-ins/Temporal/Duration/prototype/round/relativeto-zoneddatetime-nanoseconds-to-days-range-errors.js
built-ins/Temporal/Duration/prototype/round/throws-in-balance-duration-when-sign-mismatched-with-zoned-date-time.js
# expecting us to sanitycheck weird results from dateUntil for Duation::round. stupid
built-ins/Temporal/Duration/prototype/round/zero-day-length-1.js
built-ins/Temporal/Duration/prototype/total/zero-day-length-1.js

# internal mock of 12-months is incompatible w/ how we expect that calendar to handle 2-years
built-ins/Temporal/Duration/prototype/total/dateuntil-field.js

####################################################################################################
# Handling crazy results from TIMEZONE
####################################################################################################

# I disagree w/ irregular length-of-day tests for ZonedDateTime, especially the third `test`
built-ins/Temporal/ZonedDateTime/prototype/round/smallest-unit-day-rounding-modes.js
built-ins/Temporal/ZonedDateTime/prototype/since/nanoseconds-to-days-range-errors.js
built-ins/Temporal/ZonedDateTime/prototype/until/nanoseconds-to-days-range-errors.js
built-ins/Temporal/Duration/prototype/add/relativeto-zoneddatetime-nanoseconds-to-days-range-errors.js
built-ins/Temporal/Duration/prototype/subtract/relativeto-zoneddatetime-nanoseconds-to-days-range-errors.js

# we don't support hours-in-day greater than 10000000xxx
# (would require us to use DayTimeNano for simple operations)
built-ins/Temporal/ZonedDateTime/prototype/hoursInDay/precision-exact-mathematical-values.js

# expecting to sanitycheck timezones that report 0-day-length
built-ins/Temporal/Duration/prototype/round/zero-day-length.js
built-ins/Temporal/Duration/prototype/total/zero-day-length.js

# ..further sanitychecking Timezone..
built-ins/Temporal/Duration/prototype/total/relativeto-zoneddatetime-nanoseconds-to-days-range-errors.js

# zdt-based diffing should call getPossibleInstantsFor cyclically if TimeZone gives weird results
built-ins/Temporal/Duration/prototype/add/nanoseconds-to-days-loop-indefinitely.js
built-ins/Temporal/Duration/prototype/round/nanoseconds-to-days-loop-indefinitely.js
built-ins/Temporal/Duration/prototype/subtract/nanoseconds-to-days-loop-indefinitely.js
built-ins/Temporal/Duration/prototype/total/nanoseconds-to-days-loop-indefinitely.js
built-ins/Temporal/ZonedDateTime/prototype/since/nanoseconds-to-days-loop-indefinitely.js
built-ins/Temporal/ZonedDateTime/prototype/until/nanoseconds-to-days-loop-indefinitely.js

####################################################################################################
# PlainYearMonth operations break spec because we don't convert to raw fields and then back
# to PlainYearMonth. We leverage Calendar::daysInMonth and Calendar::day instead
####################################################################################################

#
# since/until
#

built-ins/Temporal/PlainYearMonth/prototype/since/calendar-datefromfields-called-with-options-undefined.js
built-ins/Temporal/PlainYearMonth/prototype/since/calendar-fields-iterable.js
built-ins/Temporal/PlainYearMonth/prototype/since/calendar-fromfields-called-with-null-prototype-fields.js
built-ins/Temporal/PlainYearMonth/prototype/since/order-of-operations.js
built-ins/Temporal/PlainYearMonth/prototype/until/calendar-datefromfields-called-with-options-undefined.js
built-ins/Temporal/PlainYearMonth/prototype/until/calendar-fields-iterable.js
built-ins/Temporal/PlainYearMonth/prototype/until/calendar-fromfields-called-with-null-prototype-fields.js
built-ins/Temporal/PlainYearMonth/prototype/until/order-of-operations.js

#
# add/subtract
#

# overall order
built-ins/Temporal/PlainYearMonth/prototype/add/order-of-operations.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/order-of-operations.js

# calling CalendarProtocol::dateFromFields/yearMonthFromFields
built-ins/Temporal/PlainYearMonth/prototype/add/calendar-datefromfields-called.js
built-ins/Temporal/PlainYearMonth/prototype/add/calendar-fromfields-called-with-null-prototype-fields.js
built-ins/Temporal/PlainYearMonth/prototype/add/calendar-yearmonthfromfields-called-with-null-prototype-options.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/calendar-datefromfields-called.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/calendar-fromfields-called-with-null-prototype-fields.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/calendar-yearmonthfromfields-called-with-null-prototype-options.js

# date-range errors
built-ins/Temporal/PlainYearMonth/prototype/add/end-of-month-out-of-range.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/end-of-month-out-of-range.js

# calling CalendarProtocol::fields
built-ins/Temporal/PlainYearMonth/prototype/add/calendar-fields-iterable.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/calendar-fields-iterable.js

# calling CalendarProtocol::fields with bad field names
built-ins/Temporal/PlainYearMonth/prototype/add/constructor-in-calendar-fields.js
built-ins/Temporal/PlainYearMonth/prototype/add/duplicate-calendar-fields.js
built-ins/Temporal/PlainYearMonth/prototype/add/proto-in-calendar-fields.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/constructor-in-calendar-fields.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/duplicate-calendar-fields.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/proto-in-calendar-fields.js

# calling CalendarProtocol::dateAdd/yearMonthFromFields
built-ins/Temporal/PlainYearMonth/prototype/add/calendar-arguments.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/calendar-arguments.js

# accessing options
built-ins/Temporal/PlainYearMonth/prototype/add/calendar-arguments-extra-options.js
built-ins/Temporal/PlainYearMonth/prototype/add/overflow-wrong-type.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/calendar-arguments-extra-options.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/overflow-wrong-type.js

####################################################################################################
# Over-reliance on Calendar (ours is better)
####################################################################################################

# Why does converting epoch<->isoFields with a TimeZone need to call Calendar::dateAdd?
built-ins/Temporal/TimeZone/prototype/getInstantFor/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/PlainTime/prototype/toZonedDateTime/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/PlainDate/prototype/toZonedDateTime/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/PlainDateTime/prototype/toZonedDateTime/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/ZonedDateTime/prototype/round/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/ZonedDateTime/prototype/round/dateadd-options.js
# vvv -- for nanoseconds-in-day (afterwards.. check dividing by zero throws error)
built-ins/Temporal/ZonedDateTime/prototype/round/div-zero.js
built-ins/Temporal/ZonedDateTime/prototype/since/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/ZonedDateTime/prototype/until/calendar-dateadd-called-with-options-undefined.js
# other unnecessasry dateAdd calls from zdt:
built-ins/Temporal/ZonedDateTime/prototype/startOfDay/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/ZonedDateTime/prototype/withPlainDate/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/ZonedDateTime/prototype/withPlainTime/calendar-dateadd-called-with-options-undefined.js

# Why does day/nanosecond diffing (which does not need a calendar) call Calendar::dateUntil?
built-ins/Temporal/PlainDateTime/prototype/since/balance-infinite-nanoseconds-duration.js
built-ins/Temporal/PlainDateTime/prototype/toZonedDateTime/plain-custom-timezone.js
built-ins/Temporal/PlainDateTime/prototype/until/balance-infinite-nanoseconds-duration.js
built-ins/Temporal/ZonedDateTime/prototype/since/calendar-dateuntil-called-with-singular-largestunit.js
built-ins/Temporal/ZonedDateTime/prototype/until/calendar-dateuntil-called-with-singular-largestunit.js

# why does Duration 'day' operations need to consult calendar?
built-ins/Temporal/Duration/prototype/round/calendar-dateuntil-called-with-singular-largestunit.js
built-ins/Temporal/Duration/prototype/total/calendar-dateuntil-called-with-singular-largestunit.js

####################################################################################################
# Ours is better
####################################################################################################

# dateAdd called fewer times
built-ins/Temporal/Duration/prototype/add/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/Duration/prototype/round/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/Duration/prototype/subtract/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/Duration/prototype/total/calendar-dateadd-called-with-options-undefined.js

# internal TimeZone::getOffsetNanosecondsFor called fewer times
built-ins/Temporal/ZonedDateTime/prototype/round/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/toString/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/with/order-of-operations.js
# (also, `overflow options should be parsed WITHIN CalendarOpsAdapter, not before`...)
built-ins/Temporal/ZonedDateTime/from/order-of-operations.js

# relative Duration fewer dateAdd calls
built-ins/Temporal/Duration/compare/order-of-operations.js
built-ins/Temporal/Duration/prototype/round/calendar-dateadd-called-with-plaindate-instance.js
# SIMILARLY, dateAdd called with different arguments
built-ins/Temporal/Duration/compare/precision-exact-mathematical-values-1.js
# fewer dateUntil calls here too...
built-ins/Temporal/Duration/prototype/round/nanoseconds-to-days-precision-exact-mathematical-values-1.js
built-ins/Temporal/PlainDate/prototype/since/order-of-operations.js

# our bag->ZonedDateTime doesn't need to call TimeZone::getOffsetNanosecondsFor
# (it uses nanosecond diffing against UTC)
built-ins/Temporal/ZonedDateTime/compare/order-of-operations.js
built-ins/Temporal/ZonedDateTime/from/argument-propertybag-timezone-getoffsetnanosecondsfor-not-callable.js
built-ins/Temporal/ZonedDateTime/from/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/equals/order-of-operations.js

# when diffing, we do not walk days one-by-one
built-ins/Temporal/ZonedDateTime/prototype/since/nanoseconds-to-days-loop-indefinitely-1.js
built-ins/Temporal/ZonedDateTime/prototype/since/nanoseconds-to-days-loop-indefinitely-2.js
built-ins/Temporal/ZonedDateTime/prototype/until/nanoseconds-to-days-loop-indefinitely-1.js
built-ins/Temporal/ZonedDateTime/prototype/until/nanoseconds-to-days-loop-indefinitely-2.js
built-ins/Temporal/Duration/prototype/add/nanoseconds-to-days-loop-indefinitely-1.js
built-ins/Temporal/Duration/prototype/add/nanoseconds-to-days-loop-indefinitely-2.js
built-ins/Temporal/Duration/prototype/round/nanoseconds-to-days-loop-indefinitely-1.js
built-ins/Temporal/Duration/prototype/round/nanoseconds-to-days-loop-indefinitely-2.js
built-ins/Temporal/Duration/prototype/subtract/nanoseconds-to-days-loop-indefinitely-1.js
built-ins/Temporal/Duration/prototype/subtract/nanoseconds-to-days-loop-indefinitely-2.js
built-ins/Temporal/Duration/prototype/total/nanoseconds-to-days-loop-indefinitely-1.js
built-ins/Temporal/Duration/prototype/total/nanoseconds-to-days-loop-indefinitely-2.js

# when diffing, we do not walk year/months one-by-one
built-ins/Temporal/Duration/prototype/round/dateuntil-field.js

# our diffing algorithm calls dateAdd/dateUntil fewer times
built-ins/Temporal/Duration/prototype/add/order-of-operations.js
built-ins/Temporal/Duration/prototype/subtract/order-of-operations.js

# fewer calls to dateUntil
built-ins/Temporal/PlainDate/prototype/until/order-of-operations.js

# fewer calls to getPossibleInstantsFor while rounding ZonedDateTime
built-ins/Temporal/ZonedDateTime/prototype/round/timezone-getpossibleinstantsfor-iterable.js
built-ins/Temporal/ZonedDateTime/prototype/round/getpossibleinstantsfor-called-with-iso8601-calendar.js

# fewer calls to getOffsetNanosecondsFor
built-ins/Temporal/ZonedDateTime/prototype/since/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/until/order-of-operations.js

# we display super large duration units as Number would, not BigInt
built-ins/Temporal/Duration/prototype/toString/precision-exact-mathematical-values.js
built-ins/Temporal/Duration/prototype/toString/precision-formatted-as-decimal-number.js

####################################################################################################
# Weird stuff
####################################################################################################

# for Intl.DateTimeFormat::formatRange,
# should throw TypeError on Temporal-obj mismatch before RangeError about invalid gregory/iso calendars
intl402/Intl/DateTimeFormat/prototype/formatRange/fails-on-distinct-temporal-types.js
intl402/Intl/DateTimeFormat/prototype/formatRangeToParts/fails-on-distinct-temporal-types.js

# Node16-specific bugs with timezone normalization
# Asia/Kolkata should not get normalized to Asia/Calcutta
intl402/Temporal/ZonedDateTime/from/do-not-canonicalize-iana-identifiers.js
intl402/Temporal/TimeZone/prototype/equals/argument-object.js
intl402/DateTimeFormat/timezone-not-canonicalized.js
# Asia/Ulan_Bator should not get normalized to Asia/Ulaanbaatar
intl402/Temporal/TimeZone/basic.js
intl402/Temporal/TimeZone/from/argument-valid.js
# "Etc/GMT-0" should not be normalized to "UTC"
intl402/Temporal/TimeZone/etc-timezone.js
intl402/Temporal/TimeZone/from/etc-timezone.js
# "Etc/GMT0" should not be normalized to "UTC"
intl402/Temporal/TimeZone/from/iana-legacy-names.js
intl402/Temporal/TimeZone/iana-legacy-names.js
# "Etc/GMT" should not be normalized to "UTC"
intl402/Temporal/TimeZone/non-canonical-utc.js
# "GMT" should not be normalized to "UTC"
intl402/Temporal/TimeZone/links-etcetera.js
# more...
intl402/Temporal/TimeZone/links-northamerica.js
intl402/Temporal/TimeZone/links-europe.js
intl402/Temporal/TimeZone/links-backzone.js
intl402/Temporal/TimeZone/links-backward.js
intl402/Temporal/TimeZone/links-asia.js
intl402/Temporal/TimeZone/links-africa.js

# Intl.DateTimeFormat should more liberally accept timeZones?
intl402/DateTimeFormat/prototype/format/offset-timezone-gmt-same.js
intl402/DateTimeFormat/prototype/formatToParts/offset-timezone-correct.js
intl402/DateTimeFormat/prototype/resolvedOptions/offset-timezone-basic.js
intl402/DateTimeFormat/prototype/resolvedOptions/offset-timezone-change.js

# Reenable when we upgrade to Node 18
# (for Intl.supportedValuesOf)
intl402/Temporal/ZonedDateTime/from/timezone-case-insensitive.js
intl402/Temporal/TimeZone/from/timezone-case-insensitive.js
intl402/Temporal/TimeZone/prototype/equals/canonical-not-equal.js
intl402/Temporal/TimeZone/prototype/equals/timezone-case-insensitive.js
intl402/DateTimeFormat/timezone-case-insensitive.js

# no Duration::toLocaleString yet
built-ins/Temporal/Duration/prototype/toLocaleString/branding.js
built-ins/Temporal/Duration/prototype/toLocaleString/prop-desc.js

# don't prohibit newer utilities
built-ins/Temporal/Duration/call-builtin.js

####################################################################################################
# Known bug in spec that's MAYBE getting fixed (https://github.com/tc39/proposal-temporal/issues/2715)
# SOLUTION: do rounding by actually adding then diffing
####################################################################################################

#
# const dur = new Temporal.Duration(3, 11, 0, 29)
# const pd1 = new Temporal.PlainDate(1972, 2, 1)
# const pd2 = pd1.add(dur)
#
# console.log(
#   'ACTUAL: ' +
#   dur.round({ largestUnit: 'years', relativeTo: pd1 }).toString() // "P4Y"
# )
# console.log(
#   'EXPECTED: ' +
#   pd1.until(pd2, { largestUnit: 'years' }).toString() // "P3Y11M29D"
# )
#
built-ins/Temporal/Duration/prototype/round/february-leap-year.js

# Can't do rel-rounding with big Durations because outside of range
built-ins/Temporal/Duration/prototype/round/precision-exact-in-balance-duration-relative-months.js
built-ins/Temporal/Duration/prototype/round/precision-exact-in-balance-duration-relative-years-days.js
built-ins/Temporal/Duration/prototype/round/precision-exact-in-balance-duration-relative-years-months.js
built-ins/Temporal/Duration/prototype/round/precision-exact-in-balance-duration-relative-years-with-calendar.js

# Can't handle super big roundingIncrement
built-ins/Temporal/Duration/prototype/round/roundingincrement-non-integer.js
built-ins/Temporal/ZonedDateTime/prototype/since/roundingincrement-non-integer.js
built-ins/Temporal/ZonedDateTime/prototype/until/roundingincrement-non-integer.js

# Problems with zdt-based Duration rounding relying too much on nanoseconds comparisons
# (converting epoch->fields waaay too many times while doing diffing/clamping)
# NEVERMIND: it's fine. 5 calls to getPossibleInstantsFor, what one would expect for accuracy
built-ins/Temporal/Duration/prototype/round/timezone-getpossibleinstantsfor-iterable.js

####################################################################################################
# Known bug in spec that's getting fixed (https://github.com/tc39/proposal-temporal/issues/2563)
####################################################################################################

#
# const dur = new Temporal.Duration(1, 0, 0, 0, 24)
# const zdt1 = Temporal.ZonedDateTime.from("2019-11-01T00:00[America/Vancouver]")
# const zdt2 = zdt1.add(dur)
#
# console.log(
#   'ACTUAL: ' +
#   dur.round({ largestUnit: 'years', relativeTo: zdt1 }).toString() // "P1Y1D"
# )
# console.log(
#   'EXPECTED: ' +
#   zdt1.until(zdt2, { largestUnit: 'years' }).toString() // "P1YT24H"
# )
#
intl402/Temporal/Duration/prototype/round/relativeto-string-datetime.js

####################################################################################################
# Known bug in spec (not yet report, could already be fixed)
####################################################################################################

#
# // Duration::add with relativeTo:PlainDate, when duration0+duration1 overflows day,
# // does not balance-up to higher units
#
# relativeTo = new Temporal.PlainDate(2023, 1, 1)
# duration0 = Temporal.Duration.from({ hours: 6 })
# duration1 = Temporal.Duration.from({ months: 2, days: 30, hours: 20 })
# durationResult = duration0.add(duration1, { relativeTo })
# // { months: 2, days: 31, hours: 2 } -- UNDESIRED!!!
#
# pdt0 = new Temporal.PlainDateTime(2023, 1, 1)
# pdt1 = pdt0.add({ hours: 6 })
# pdt2 = pdt1.add({ months: 2, days: 30, hours: 20 })
# durationResult = pdt0.until(pdt2, { largestUnit: 'months' })
# // { months: 3, hours: 2 } -- DESIRED
#
built-ins/Temporal/Duration/prototype/subtract/calendar-dateadd.js

####################################################################################################
# Don't care
####################################################################################################

# when ZonedDateTime needs to query Calendar, should give PlainDateTime instead of PlainDate (i disagree)
built-ins/Temporal/ZonedDateTime/prototype/day/custom.js
built-ins/Temporal/ZonedDateTime/prototype/dayOfWeek/custom.js
built-ins/Temporal/ZonedDateTime/prototype/dayOfYear/custom.js
built-ins/Temporal/ZonedDateTime/prototype/daysInMonth/custom.js
built-ins/Temporal/ZonedDateTime/prototype/daysInWeek/custom.js
built-ins/Temporal/ZonedDateTime/prototype/daysInYear/custom.js
built-ins/Temporal/ZonedDateTime/prototype/inLeapYear/custom.js
built-ins/Temporal/ZonedDateTime/prototype/month/custom.js
built-ins/Temporal/ZonedDateTime/prototype/monthCode/custom.js
built-ins/Temporal/ZonedDateTime/prototype/monthsInYear/custom.js
built-ins/Temporal/ZonedDateTime/prototype/year/custom.js
built-ins/Temporal/ZonedDateTime/prototype/yearOfWeek/custom.js

# problem with our adapter needing specific instance of Temporal object
built-ins/Temporal/Duration/compare/calendar-dateadd-called-with-plaindate-instance.js
built-ins/Temporal/PlainDate/prototype/add/custom.js
built-ins/Temporal/PlainDate/prototype/day/custom.js
built-ins/Temporal/PlainDate/prototype/dayOfWeek/custom.js
built-ins/Temporal/PlainDate/prototype/dayOfYear/custom.js
built-ins/Temporal/PlainDate/prototype/daysInMonth/custom.js
built-ins/Temporal/PlainDate/prototype/daysInWeek/custom.js
built-ins/Temporal/PlainDate/prototype/daysInYear/custom.js
built-ins/Temporal/PlainDate/prototype/inLeapYear/custom.js
built-ins/Temporal/PlainDate/prototype/month/custom.js
built-ins/Temporal/PlainDate/prototype/monthCode/custom.js
built-ins/Temporal/PlainDate/prototype/monthsInYear/custom.js
built-ins/Temporal/PlainDate/prototype/since/calendar-dateadd-called-with-plaindate-instance.js
built-ins/Temporal/PlainDate/prototype/subtract/custom.js
built-ins/Temporal/PlainDate/prototype/since/custom.js
built-ins/Temporal/PlainDate/prototype/until/calendar-dateadd-called-with-plaindate-instance.js
built-ins/Temporal/PlainDate/prototype/until/custom.js
built-ins/Temporal/PlainDate/prototype/weekOfYear/custom.js
built-ins/Temporal/PlainDate/prototype/with/custom.js
built-ins/Temporal/PlainDate/prototype/year/custom.js
built-ins/Temporal/PlainDate/prototype/yearOfWeek/custom.js
built-ins/Temporal/PlainDateTime/prototype/day/custom.js
built-ins/Temporal/PlainDateTime/prototype/dayOfWeek/custom.js
built-ins/Temporal/PlainDateTime/prototype/dayOfYear/custom.js
built-ins/Temporal/PlainDateTime/prototype/daysInMonth/custom.js
built-ins/Temporal/PlainDateTime/prototype/daysInWeek/custom.js
built-ins/Temporal/PlainDateTime/prototype/daysInYear/custom.js
built-ins/Temporal/PlainDateTime/prototype/inLeapYear/custom.js
built-ins/Temporal/PlainDateTime/prototype/month/custom.js
built-ins/Temporal/PlainDateTime/prototype/monthCode/custom.js
built-ins/Temporal/PlainDateTime/prototype/monthsInYear/custom.js
built-ins/Temporal/PlainDateTime/prototype/toZonedDateTime/plain-custom-timezone.js
built-ins/Temporal/PlainDateTime/prototype/weekOfYear/custom.js
built-ins/Temporal/PlainDateTime/prototype/year/custom.js
built-ins/Temporal/PlainDateTime/prototype/yearOfWeek/custom.js
built-ins/Temporal/ZonedDateTime/prototype/weekOfYear/custom.js
built-ins/Temporal/PlainYearMonth/prototype/daysInMonth/custom.js
built-ins/Temporal/PlainYearMonth/prototype/daysInYear/custom.js
built-ins/Temporal/PlainYearMonth/prototype/inLeapYear/custom.js
built-ins/Temporal/PlainYearMonth/prototype/month/custom.js
built-ins/Temporal/PlainYearMonth/prototype/monthCode/custom.js
built-ins/Temporal/PlainYearMonth/prototype/monthsInYear/custom.js
built-ins/Temporal/PlainYearMonth/prototype/year/custom.js
built-ins/Temporal/PlainMonthDay/prototype/day/custom.js
built-ins/Temporal/PlainMonthDay/prototype/monthCode/custom.js
built-ins/Temporal/TimeZone/prototype/getPlainDateTimeFor/custom-timezone.js
built-ins/Temporal/Duration/prototype/add/calendar-dateadd-called-with-plaindate-instance.js
built-ins/Temporal/Duration/prototype/subtract/calendar-dateadd-called-with-plaindate-instance.js
built-ins/Temporal/Duration/prototype/total/calendar-dateadd-called-with-plaindate-instance.js

# why, with optional method argument, should length be 0?
built-ins/Temporal/Duration/prototype/toString/length.js
built-ins/Temporal/Instant/prototype/toLocaleString/length.js
built-ins/Temporal/Instant/prototype/toString/length.js
built-ins/Temporal/Instant/prototype/toLocaleString/length.js
built-ins/Temporal/Instant/prototype/toString/length.js
built-ins/Temporal/PlainDate/prototype/toLocaleString/length.js
built-ins/Temporal/PlainDate/prototype/toPlainDateTime/length.js
built-ins/Temporal/PlainDate/prototype/toString/length.js
built-ins/Temporal/PlainDateTime/prototype/toLocaleString/length.js
built-ins/Temporal/PlainDateTime/prototype/toString/length.js
built-ins/Temporal/PlainDateTime/prototype/withPlainTime/length.js
built-ins/Temporal/PlainMonthDay/prototype/toLocaleString/length.js
built-ins/Temporal/PlainMonthDay/prototype/toString/length.js
built-ins/Temporal/PlainTime/prototype/toLocaleString/length.js
built-ins/Temporal/PlainTime/prototype/toString/length.js
built-ins/Temporal/PlainYearMonth/prototype/toLocaleString/length.js
built-ins/Temporal/PlainYearMonth/prototype/toString/length.js
built-ins/Temporal/ZonedDateTime/prototype/toLocaleString/length.js
built-ins/Temporal/ZonedDateTime/prototype/toString/length.js
built-ins/Temporal/ZonedDateTime/prototype/withPlainTime/length.js

# b/c of fullcalendar/temporal weird class-construction
#
# cd test262/tests
# find built-ins/Temporal -name 'name.js' -o -name 'length.js'
#
built-ins/Temporal/PlainMonthDay/from/length.js
built-ins/Temporal/PlainMonthDay/prototype/with/length.js
built-ins/Temporal/PlainMonthDay/prototype/valueOf/name.js
built-ins/Temporal/PlainDateTime/from/length.js
built-ins/Temporal/PlainDateTime/prototype/toZonedDateTime/length.js
built-ins/Temporal/PlainDateTime/prototype/with/length.js
built-ins/Temporal/PlainDateTime/prototype/subtract/length.js
built-ins/Temporal/PlainDateTime/prototype/since/length.js
built-ins/Temporal/PlainDateTime/prototype/until/length.js
built-ins/Temporal/PlainDateTime/prototype/valueOf/name.js
built-ins/Temporal/PlainDateTime/prototype/add/length.js
built-ins/Temporal/PlainYearMonth/from/length.js
built-ins/Temporal/PlainYearMonth/prototype/with/length.js
built-ins/Temporal/PlainYearMonth/prototype/since/length.js
built-ins/Temporal/PlainYearMonth/prototype/until/length.js
built-ins/Temporal/PlainYearMonth/prototype/valueOf/name.js
built-ins/Temporal/Calendar/prototype/dayOfYear/name.js
built-ins/Temporal/Calendar/prototype/month/name.js
built-ins/Temporal/Calendar/prototype/dateFromFields/length.js
built-ins/Temporal/Calendar/prototype/dateAdd/length.js
built-ins/Temporal/Calendar/prototype/monthCode/name.js
built-ins/Temporal/Calendar/prototype/monthDayFromFields/length.js
built-ins/Temporal/Calendar/prototype/yearMonthFromFields/length.js
built-ins/Temporal/Calendar/prototype/daysInWeek/name.js
built-ins/Temporal/Calendar/prototype/inLeapYear/name.js
built-ins/Temporal/Calendar/prototype/daysInMonth/name.js
built-ins/Temporal/Calendar/prototype/year/name.js
built-ins/Temporal/Calendar/prototype/dateUntil/length.js
built-ins/Temporal/Calendar/prototype/dayOfWeek/name.js
built-ins/Temporal/Calendar/prototype/weekOfYear/name.js
built-ins/Temporal/Calendar/prototype/yearOfWeek/name.js
built-ins/Temporal/Calendar/prototype/day/name.js
built-ins/Temporal/Calendar/prototype/daysInYear/name.js
built-ins/Temporal/Calendar/prototype/monthsInYear/name.js
built-ins/Temporal/TimeZone/prototype/getInstantFor/length.js
built-ins/Temporal/ZonedDateTime/from/length.js
built-ins/Temporal/ZonedDateTime/prototype/with/length.js
built-ins/Temporal/ZonedDateTime/prototype/subtract/length.js
built-ins/Temporal/ZonedDateTime/prototype/since/length.js
built-ins/Temporal/ZonedDateTime/prototype/until/length.js
built-ins/Temporal/ZonedDateTime/prototype/valueOf/name.js
built-ins/Temporal/ZonedDateTime/prototype/add/length.js
built-ins/Temporal/Instant/prototype/since/length.js
built-ins/Temporal/Instant/prototype/until/length.js
built-ins/Temporal/Instant/prototype/valueOf/name.js
built-ins/Temporal/PlainTime/from/length.js
built-ins/Temporal/PlainTime/prototype/with/length.js
built-ins/Temporal/PlainTime/prototype/since/length.js
built-ins/Temporal/PlainTime/prototype/until/length.js
built-ins/Temporal/PlainTime/prototype/valueOf/name.js
built-ins/Temporal/PlainDate/from/length.js
built-ins/Temporal/PlainDate/prototype/with/length.js
built-ins/Temporal/PlainDate/prototype/subtract/length.js
built-ins/Temporal/PlainDate/prototype/since/length.js
built-ins/Temporal/PlainDate/prototype/until/length.js
built-ins/Temporal/PlainDate/prototype/valueOf/name.js
built-ins/Temporal/PlainDate/prototype/add/length.js
built-ins/Temporal/Now/plainDateTime/length.js
built-ins/Temporal/Now/plainDateTime/name.js
built-ins/Temporal/Now/zonedDateTime/length.js
built-ins/Temporal/Now/zonedDateTime/name.js
built-ins/Temporal/Now/instant/name.js
built-ins/Temporal/Now/plainDateISO/length.js
built-ins/Temporal/Now/plainDateTimeISO/length.js
built-ins/Temporal/Now/plainDate/length.js
built-ins/Temporal/Now/plainTimeISO/length.js
built-ins/Temporal/Now/timeZoneId/name.js
built-ins/Temporal/Now/zonedDateTimeISO/length.js
built-ins/Temporal/Duration/prototype/subtract/length.js
built-ins/Temporal/Duration/prototype/valueOf/name.js
built-ins/Temporal/Duration/prototype/add/length.js
built-ins/Temporal/Duration/compare/length.js
intl402/Temporal/Calendar/prototype/era/name.js
intl402/Temporal/Calendar/prototype/eraYear/name.js

# we use array spreading internally
built-ins/Temporal/PlainMonthDay/from/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainMonthDay/prototype/with/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainMonthDay/prototype/toPlainDate/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainMonthDay/prototype/equals/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/from/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/with/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/toPlainMonthDay/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/since/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/withPlainDate/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/until/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/equals/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/toPlainYearMonth/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/compare/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/from/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/with/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/toPlainDate/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/since/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/since/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/until/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/until/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/equals/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/add/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/compare/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/dayOfYear/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/month/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/dateAdd/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/monthCode/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/daysInWeek/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/inLeapYear/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/daysInMonth/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/year/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/dateUntil/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/dayOfWeek/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/weekOfYear/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/yearOfWeek/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/day/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/daysInYear/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/monthsInYear/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/TimeZone/prototype/getInstantFor/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/TimeZone/prototype/getPossibleInstantsFor/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/from/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/with/builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/toPlainMonthDay/builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/since/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/withPlainDate/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/until/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/equals/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/toPlainYearMonth/builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/compare/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainTime/prototype/toZonedDateTime/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainTime/prototype/toPlainDateTime/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/from/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/prototype/with/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/prototype/toPlainMonthDay/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/prototype/since/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/prototype/until/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/prototype/equals/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/prototype/toPlainYearMonth/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/compare/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Duration/prototype/subtract/relativeto-propertybag-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Duration/prototype/total/relativeto-propertybag-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Duration/prototype/add/relativeto-propertybag-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Duration/prototype/round/relativeto-propertybag-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Duration/compare/relativeto-propertybag-builtin-calendar-no-array-iteration.js
intl402/Temporal/Calendar/prototype/era/argument-builtin-calendar-no-array-iteration.js
intl402/Temporal/Calendar/prototype/eraYear/argument-builtin-calendar-no-array-iteration.js
