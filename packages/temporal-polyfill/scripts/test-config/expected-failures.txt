
# TODO: expected-failures-es5.txt still runs. merge it into this files

# OUR SHORTCOMING:
# our zdt-rounding doesn't consider the zdt's dayLengthNs (which is expensive to compute)
# when doing rounding. relevant when smallestUnit:'day'.
# (all this in spite of none of the below files test smallestUnit:'day')
#
# SOLUTION: integrate the logic in round.ts::nudgeRelativeDurationTime into genericApi/zonedDateTime.ts::round
#
built-ins/Temporal/ZonedDateTime/prototype/round/timezone-getpossibleinstantsfor-iterable.js
built-ins/Temporal/ZonedDateTime/prototype/round/getpossibleinstantsfor-called-with-iso8601-calendar.js
built-ins/Temporal/ZonedDateTime/prototype/round/div-zero.js

# wrong record-extraction ordering (difficult)
built-ins/Temporal/Duration/prototype/add/order-of-operations.js
built-ins/Temporal/Duration/prototype/subtract/order-of-operations.js

# TODO: fewer calls to getPossibleInstantsFor for Duration rounding
# IMPROVE our marker system somehow
#
# our algorithm:
#   p0 = parse(relativeTo) --- getPossibleInstantsFor
#   p1 = p0 + duration --- getPossibleInstantsFor
#   diff0 = diff(p0 -> p1) --- getPossibleInstantsFor
#   p3 = p0 + diff0.roundedSmallestUnitAndLarger  --- getPossibleInstantsFor
#   p4 = p3 + nextIncrementOfSmallestUnit --- getPossibleInstantsFor
#   value = roundFunc(p1 between p3<->p4)
#
built-ins/Temporal/Duration/prototype/round/timezone-getpossibleinstantsfor-iterable.js

####################################################################################################
# PlainYearMonth operations break spec because we don't convert to raw fields and then back
# to PlainYearMonth. We leverage Calendar::day instead
####################################################################################################

#
# since/until
#

built-ins/Temporal/PlainYearMonth/prototype/since/calendar-datefromfields-called-with-options-undefined.js
built-ins/Temporal/PlainYearMonth/prototype/since/calendar-fields-iterable.js
built-ins/Temporal/PlainYearMonth/prototype/since/calendar-fromfields-called-with-null-prototype-fields.js
built-ins/Temporal/PlainYearMonth/prototype/since/order-of-operations.js
built-ins/Temporal/PlainYearMonth/prototype/until/calendar-datefromfields-called-with-options-undefined.js
built-ins/Temporal/PlainYearMonth/prototype/until/calendar-fields-iterable.js
built-ins/Temporal/PlainYearMonth/prototype/until/calendar-fromfields-called-with-null-prototype-fields.js
built-ins/Temporal/PlainYearMonth/prototype/until/order-of-operations.js

#
# add/subtract
#

# overall order
built-ins/Temporal/PlainYearMonth/prototype/add/order-of-operations.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/order-of-operations.js

# calling CalendarProtocol::dateFromFields/yearMonthFromFields
built-ins/Temporal/PlainYearMonth/prototype/add/calendar-datefromfields-called.js
built-ins/Temporal/PlainYearMonth/prototype/add/calendar-fromfields-called-with-null-prototype-fields.js
built-ins/Temporal/PlainYearMonth/prototype/add/calendar-yearmonthfromfields-called-with-null-prototype-options.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/calendar-datefromfields-called.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/calendar-fromfields-called-with-null-prototype-fields.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/calendar-yearmonthfromfields-called-with-null-prototype-options.js

# date-range errors
built-ins/Temporal/PlainYearMonth/prototype/add/end-of-month-out-of-range.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/end-of-month-out-of-range.js

# calling CalendarProtocol::fields
built-ins/Temporal/PlainYearMonth/prototype/add/calendar-fields-iterable.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/calendar-fields-iterable.js

# calling CalendarProtocol::fields with bad field names
built-ins/Temporal/PlainYearMonth/prototype/add/constructor-in-calendar-fields.js
built-ins/Temporal/PlainYearMonth/prototype/add/duplicate-calendar-fields.js
built-ins/Temporal/PlainYearMonth/prototype/add/proto-in-calendar-fields.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/constructor-in-calendar-fields.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/duplicate-calendar-fields.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/proto-in-calendar-fields.js

# calling CalendarProtocol::dateAdd/yearMonthFromFields
built-ins/Temporal/PlainYearMonth/prototype/add/calendar-arguments.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/calendar-arguments.js

# accessing options
built-ins/Temporal/PlainYearMonth/prototype/add/calendar-arguments-extra-options.js
built-ins/Temporal/PlainYearMonth/prototype/add/overflow-wrong-type.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/calendar-arguments-extra-options.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/overflow-wrong-type.js

####################################################################################################
# Calendar intentional spec breaking
####################################################################################################

# In the spec, `AddDuration` adds dur0 y/m/w/d, then dur1 y/m/w/d, then combines and adds time parts.
# Our version uses two `moveDateTime` calls for better code reuse, which results in:
#   +dur0.timeparts +dur0.ymwd +dur1.timeparts +dur1.ymwd
# Same ultimate results but different calls to Calendar::dateAdd w/ different intermediate durations.
built-ins/Temporal/Duration/prototype/subtract/calendar-dateadd.js

####################################################################################################
# TimeZone intentional spec breaking (diffing/etc)
####################################################################################################

# spec's NanosecondsToDays has more complicated back-off strategy that's supposed to throw errors
# when receiving whacky results from getPossibleInstantsFor. Because we reuse our diffing algorithm
# instead of NanosecondsToDays, and our diffing algorithm has its own back-off strategy for ZDT diffing,
# no error is thrown, which deviates from the spec.
built-ins/Temporal/Duration/prototype/round/throws-in-balance-duration-when-sign-mismatched-with-zoned-date-time.js
built-ins/Temporal/Duration/prototype/round/zero-day-length.js
built-ins/Temporal/Duration/prototype/total/zero-day-length.js

# DifferenceZonedDateTime sanity-checks its `timeRemainderNs` against NanosecondsToDays to account
# for any day-overflow that erratic TimeZone protocols might be responsible for. We don't bother to
# check this.
#
# SIDENOTE: this is probably why our zdt-diffing implementation calls getOffsetNanosecondsFor
# fewer times
#
# Many things call NanosecondsToDays under the hood:
# - AddDuration > DifferenceZonedDateTime > NanosecondsToDays
#
built-ins/Temporal/ZonedDateTime/prototype/since/nanoseconds-to-days-range-errors.js
built-ins/Temporal/ZonedDateTime/prototype/until/nanoseconds-to-days-range-errors.js
built-ins/Temporal/Duration/prototype/add/relativeto-zoneddatetime-nanoseconds-to-days-range-errors.js
built-ins/Temporal/Duration/prototype/subtract/relativeto-zoneddatetime-nanoseconds-to-days-range-errors.js
#
# Coincidentally, if you comment-out the TemporalHelpers.SUBSTITUTE_SKIP lines in the mocks,
# things correctly throw RangeErrors, but this is incidental and unrelated (mismatching Duration signs)
#
built-ins/Temporal/Duration/prototype/round/relativeto-zoneddatetime-nanoseconds-to-days-range-errors.js
built-ins/Temporal/Duration/prototype/total/relativeto-zoneddatetime-nanoseconds-to-days-range-errors.js

# For balancing, we internally use diffing instead of NanosecondsToDays.
# The spec requires NanosecondsToDays, which has checks the multiple subsequent calls to
# getPossibleInstantsFor with progressing ISO-fields has similarly progressing Instants.
built-ins/Temporal/Duration/prototype/add/nanoseconds-to-days-loop-indefinitely.js
built-ins/Temporal/Duration/prototype/round/nanoseconds-to-days-loop-indefinitely.js
built-ins/Temporal/Duration/prototype/subtract/nanoseconds-to-days-loop-indefinitely.js
built-ins/Temporal/Duration/prototype/total/nanoseconds-to-days-loop-indefinitely.js
built-ins/Temporal/ZonedDateTime/prototype/since/nanoseconds-to-days-loop-indefinitely.js
built-ins/Temporal/ZonedDateTime/prototype/until/nanoseconds-to-days-loop-indefinitely.js

# we don't support hours-in-day greater than 10000000xxx (line 119 in the test),
# which can happen if 1-day-apart TimeZone::getPossibleInstantsFor calls give results wildly apart.
# results in slightly-less-precise-than-desirable (already ridiculous) .hoursInDay values
# this happens because we don't leverage bigint for such normally-simple operations
built-ins/Temporal/ZonedDateTime/prototype/hoursInDay/precision-exact-mathematical-values.js

####################################################################################################
# ::toPlainMonthDay/toPlainYearMonth intentional spec break
####################################################################################################

# we access ZonedDateTimes/PlainDate/etc's monthCode/day and year/monthCode fields directly
built-ins/Temporal/ZonedDateTime/prototype/toPlainMonthDay/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/toPlainYearMonth/order-of-operations.js

####################################################################################################
# PlainDateTime::with intentional spec break
####################################################################################################

# don't access own time parts via fields/refineFields
# weird because we DO want to do this on the add-on fields
built-ins/Temporal/PlainDateTime/prototype/with/order-of-operations.js

####################################################################################################
# Ours is better
####################################################################################################

# fewer calls to dateAdd/dateUntil. for real. our onion-shell algorithm is better
# we use diffing to balance.
# we do not do UnbalanceDateDurationRelative+BalanceDateDurationRelative
built-ins/Temporal/PlainDateTime/prototype/since/order-of-operations.js
built-ins/Temporal/PlainDateTime/prototype/until/order-of-operations.js
built-ins/Temporal/Duration/prototype/add/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/Duration/prototype/round/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/Duration/prototype/subtract/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/ZonedDateTime/prototype/since/calendar-dateuntil-called-with-singular-largestunit.js
built-ins/Temporal/ZonedDateTime/prototype/until/calendar-dateuntil-called-with-singular-largestunit.js
built-ins/Temporal/Duration/prototype/round/calendar-dateuntil-called-with-singular-largestunit.js
built-ins/Temporal/ZonedDateTime/prototype/since/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/ZonedDateTime/prototype/until/calendar-dateadd-called-with-options-undefined.js
built-ins/Temporal/Duration/prototype/round/dateuntil-field.js
built-ins/Temporal/PlainDate/prototype/until/order-of-operations.js
built-ins/Temporal/PlainDate/prototype/since/order-of-operations.js

# NEW ASSESSMENT:
# if no calendar units, no need to consult relativeTo's calendar or pluck dateAdd/dateUntil
# TODO: change our ways? if caller provides relativeTo, simply respect calendar?
built-ins/Temporal/Duration/compare/order-of-operations.js
built-ins/Temporal/Duration/prototype/round/order-of-operations.js
built-ins/Temporal/Duration/prototype/total/order-of-operations.js

# There's one fewer TimeZone::getOffsetNanosecondsFor call for `InterpretISODateTimeOffset`
# (which converts converts isoFields+offset to epochNano)
# because internally, intermediate PlainDateTime is supposed to be created
built-ins/Temporal/ZonedDateTime/prototype/round/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/with/order-of-operations.js
built-ins/Temporal/ZonedDateTime/from/order-of-operations.js
built-ins/Temporal/ZonedDateTime/compare/order-of-operations.js
built-ins/Temporal/ZonedDateTime/from/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/equals/order-of-operations.js
built-ins/Temporal/ZonedDateTime/from/argument-propertybag-ambiguous-wall-clock-time.js

# fewer calls to getOffsetNanosecondsFor
# because of NanosecondsToDays and InterpretISODateTimeOffset
# and many other fewer (and sometimes different) calls :(
built-ins/Temporal/ZonedDateTime/prototype/since/order-of-operations.js
built-ins/Temporal/ZonedDateTime/prototype/until/order-of-operations.js

# our zonedInternalsToIso cache (which converts zdt to iso-fields) avoids a second call to getOffsetNanosecondsFor
built-ins/Temporal/ZonedDateTime/prototype/withPlainDate/order-of-operations.js

# we display super large duration units as Number would, not BigInt
built-ins/Temporal/Duration/prototype/toString/precision-exact-mathematical-values.js
built-ins/Temporal/Duration/prototype/toString/precision-formatted-as-decimal-number.js

####################################################################################################
# Intl stuff
####################################################################################################

# Node16-specific bugs with timezone normalization
# Asia/Kolkata should not get normalized to Asia/Calcutta
intl402/Temporal/ZonedDateTime/from/do-not-canonicalize-iana-identifiers.js
intl402/Temporal/TimeZone/prototype/equals/argument-object.js
intl402/DateTimeFormat/timezone-not-canonicalized.js
# Asia/Ulan_Bator should not get normalized to Asia/Ulaanbaatar
intl402/Temporal/TimeZone/basic.js
intl402/Temporal/TimeZone/from/argument-valid.js
# "Etc/GMT-0" should not be normalized to "UTC"
intl402/Temporal/TimeZone/etc-timezone.js
intl402/Temporal/TimeZone/from/etc-timezone.js
# "Etc/GMT0" should not be normalized to "UTC"
intl402/Temporal/TimeZone/from/iana-legacy-names.js
intl402/Temporal/TimeZone/iana-legacy-names.js
# "Etc/GMT" should not be normalized to "UTC"
intl402/Temporal/TimeZone/non-canonical-utc.js
# "GMT" should not be normalized to "UTC"
intl402/Temporal/TimeZone/links-etcetera.js
# more...
intl402/Temporal/TimeZone/links-northamerica.js
intl402/Temporal/TimeZone/links-europe.js
intl402/Temporal/TimeZone/links-backzone.js
intl402/Temporal/TimeZone/links-backward.js
intl402/Temporal/TimeZone/links-asia.js
intl402/Temporal/TimeZone/links-africa.js

# Intl.DateTimeFormat does not accept numeric-offset `timeZones`s and we are okay with that
intl402/DateTimeFormat/prototype/format/offset-timezone-gmt-same.js
intl402/DateTimeFormat/prototype/formatToParts/offset-timezone-correct.js
intl402/DateTimeFormat/prototype/resolvedOptions/offset-timezone-basic.js
intl402/DateTimeFormat/prototype/resolvedOptions/offset-timezone-change.js

# Reenable when we upgrade to Node 18
# (for Intl.supportedValuesOf)
intl402/Temporal/ZonedDateTime/from/timezone-case-insensitive.js
intl402/Temporal/TimeZone/from/timezone-case-insensitive.js
intl402/Temporal/TimeZone/prototype/equals/canonical-not-equal.js
intl402/Temporal/TimeZone/prototype/equals/timezone-case-insensitive.js
intl402/DateTimeFormat/timezone-case-insensitive.js

####################################################################################################
# Reported bug: https://github.com/tc39/proposal-temporal/issues/2742
####################################################################################################

intl402/Temporal/Duration/prototype/round/relativeto-string-datetime.js

####################################################################################################
# Don't care
####################################################################################################

# when ZonedDateTime needs to query Calendar, should give PlainDateTime instead of PlainDate (i disagree)
built-ins/Temporal/ZonedDateTime/prototype/day/custom.js
built-ins/Temporal/ZonedDateTime/prototype/dayOfWeek/custom.js
built-ins/Temporal/ZonedDateTime/prototype/dayOfYear/custom.js
built-ins/Temporal/ZonedDateTime/prototype/daysInMonth/custom.js
built-ins/Temporal/ZonedDateTime/prototype/daysInWeek/custom.js
built-ins/Temporal/ZonedDateTime/prototype/daysInYear/custom.js
built-ins/Temporal/ZonedDateTime/prototype/inLeapYear/custom.js
built-ins/Temporal/ZonedDateTime/prototype/month/custom.js
built-ins/Temporal/ZonedDateTime/prototype/monthCode/custom.js
built-ins/Temporal/ZonedDateTime/prototype/monthsInYear/custom.js
built-ins/Temporal/ZonedDateTime/prototype/year/custom.js
built-ins/Temporal/ZonedDateTime/prototype/yearOfWeek/custom.js

# getPossibleInstantsFor wants plainDateTimes that sometimes have calendar. instead, always give iso
built-ins/Temporal/PlainDate/prototype/toZonedDateTime/timezone-getpossibleinstantsfor.js

# problem with our adapter needing specific instance of Temporal object
built-ins/Temporal/Duration/compare/calendar-dateadd-called-with-plaindate-instance.js
built-ins/Temporal/PlainDate/prototype/add/custom.js
built-ins/Temporal/PlainDate/prototype/day/custom.js
built-ins/Temporal/PlainDate/prototype/dayOfWeek/custom.js
built-ins/Temporal/PlainDate/prototype/dayOfYear/custom.js
built-ins/Temporal/PlainDate/prototype/daysInMonth/custom.js
built-ins/Temporal/PlainDate/prototype/daysInWeek/custom.js
built-ins/Temporal/PlainDate/prototype/daysInYear/custom.js
built-ins/Temporal/PlainDate/prototype/inLeapYear/custom.js
built-ins/Temporal/PlainDate/prototype/month/custom.js
built-ins/Temporal/PlainDate/prototype/monthCode/custom.js
built-ins/Temporal/PlainDate/prototype/monthsInYear/custom.js
built-ins/Temporal/PlainDate/prototype/since/calendar-dateadd-called-with-plaindate-instance.js
built-ins/Temporal/PlainDate/prototype/subtract/custom.js
built-ins/Temporal/PlainDate/prototype/since/custom.js
built-ins/Temporal/PlainDate/prototype/until/calendar-dateadd-called-with-plaindate-instance.js
built-ins/Temporal/PlainDate/prototype/until/custom.js
built-ins/Temporal/PlainDate/prototype/weekOfYear/custom.js
built-ins/Temporal/PlainDate/prototype/with/custom.js
built-ins/Temporal/PlainDate/prototype/year/custom.js
built-ins/Temporal/PlainDate/prototype/yearOfWeek/custom.js
built-ins/Temporal/PlainDateTime/prototype/day/custom.js
built-ins/Temporal/PlainDateTime/prototype/dayOfWeek/custom.js
built-ins/Temporal/PlainDateTime/prototype/dayOfYear/custom.js
built-ins/Temporal/PlainDateTime/prototype/daysInMonth/custom.js
built-ins/Temporal/PlainDateTime/prototype/daysInWeek/custom.js
built-ins/Temporal/PlainDateTime/prototype/daysInYear/custom.js
built-ins/Temporal/PlainDateTime/prototype/inLeapYear/custom.js
built-ins/Temporal/PlainDateTime/prototype/month/custom.js
built-ins/Temporal/PlainDateTime/prototype/monthCode/custom.js
built-ins/Temporal/PlainDateTime/prototype/monthsInYear/custom.js
built-ins/Temporal/PlainDateTime/prototype/toZonedDateTime/plain-custom-timezone.js
built-ins/Temporal/PlainDateTime/prototype/weekOfYear/custom.js
built-ins/Temporal/PlainDateTime/prototype/year/custom.js
built-ins/Temporal/PlainDateTime/prototype/yearOfWeek/custom.js
built-ins/Temporal/ZonedDateTime/prototype/weekOfYear/custom.js
built-ins/Temporal/PlainYearMonth/prototype/daysInMonth/custom.js
built-ins/Temporal/PlainYearMonth/prototype/daysInYear/custom.js
built-ins/Temporal/PlainYearMonth/prototype/inLeapYear/custom.js
built-ins/Temporal/PlainYearMonth/prototype/month/custom.js
built-ins/Temporal/PlainYearMonth/prototype/monthCode/custom.js
built-ins/Temporal/PlainYearMonth/prototype/monthsInYear/custom.js
built-ins/Temporal/PlainYearMonth/prototype/year/custom.js
built-ins/Temporal/PlainMonthDay/prototype/day/custom.js
built-ins/Temporal/PlainMonthDay/prototype/monthCode/custom.js
built-ins/Temporal/TimeZone/prototype/getPlainDateTimeFor/custom-timezone.js
built-ins/Temporal/Duration/prototype/add/calendar-dateadd-called-with-plaindate-instance.js
built-ins/Temporal/Duration/prototype/subtract/calendar-dateadd-called-with-plaindate-instance.js
built-ins/Temporal/Duration/prototype/total/calendar-dateadd-called-with-plaindate-instance.js
built-ins/Temporal/Duration/prototype/round/calendar-dateadd-called-with-plaindate-instance.js

# why, with optional method argument, should length be 0?
built-ins/Temporal/Duration/prototype/toString/length.js
built-ins/Temporal/Instant/prototype/toLocaleString/length.js
built-ins/Temporal/Instant/prototype/toString/length.js
built-ins/Temporal/Instant/prototype/toLocaleString/length.js
built-ins/Temporal/Instant/prototype/toString/length.js
built-ins/Temporal/PlainDate/prototype/toLocaleString/length.js
built-ins/Temporal/PlainDate/prototype/toPlainDateTime/length.js
built-ins/Temporal/PlainDate/prototype/toString/length.js
built-ins/Temporal/PlainDateTime/prototype/toLocaleString/length.js
built-ins/Temporal/PlainDateTime/prototype/toString/length.js
built-ins/Temporal/PlainDateTime/prototype/withPlainTime/length.js
built-ins/Temporal/PlainMonthDay/prototype/toLocaleString/length.js
built-ins/Temporal/PlainMonthDay/prototype/toString/length.js
built-ins/Temporal/PlainTime/prototype/toLocaleString/length.js
built-ins/Temporal/PlainTime/prototype/toString/length.js
built-ins/Temporal/PlainYearMonth/prototype/toLocaleString/length.js
built-ins/Temporal/PlainYearMonth/prototype/toString/length.js
built-ins/Temporal/ZonedDateTime/prototype/toLocaleString/length.js
built-ins/Temporal/ZonedDateTime/prototype/toString/length.js
built-ins/Temporal/ZonedDateTime/prototype/withPlainTime/length.js
built-ins/Temporal/Duration/prototype/toLocaleString/length.js

# b/c of fullcalendar/temporal weird class-construction
#
# cd test262/tests
# find built-ins/Temporal -name 'name.js' -o -name 'length.js'
#
built-ins/Temporal/PlainMonthDay/from/length.js
built-ins/Temporal/PlainMonthDay/prototype/with/length.js
built-ins/Temporal/PlainMonthDay/prototype/valueOf/name.js
built-ins/Temporal/PlainDateTime/from/length.js
built-ins/Temporal/PlainDateTime/prototype/toZonedDateTime/length.js
built-ins/Temporal/PlainDateTime/prototype/with/length.js
built-ins/Temporal/PlainDateTime/prototype/subtract/length.js
built-ins/Temporal/PlainDateTime/prototype/since/length.js
built-ins/Temporal/PlainDateTime/prototype/until/length.js
built-ins/Temporal/PlainDateTime/prototype/valueOf/name.js
built-ins/Temporal/PlainDateTime/prototype/add/length.js
built-ins/Temporal/PlainYearMonth/from/length.js
built-ins/Temporal/PlainYearMonth/prototype/with/length.js
built-ins/Temporal/PlainYearMonth/prototype/since/length.js
built-ins/Temporal/PlainYearMonth/prototype/until/length.js
built-ins/Temporal/PlainYearMonth/prototype/valueOf/name.js
built-ins/Temporal/Calendar/prototype/dayOfYear/name.js
built-ins/Temporal/Calendar/prototype/month/name.js
built-ins/Temporal/Calendar/prototype/dateFromFields/length.js
built-ins/Temporal/Calendar/prototype/dateAdd/length.js
built-ins/Temporal/Calendar/prototype/monthCode/name.js
built-ins/Temporal/Calendar/prototype/monthDayFromFields/length.js
built-ins/Temporal/Calendar/prototype/yearMonthFromFields/length.js
built-ins/Temporal/Calendar/prototype/daysInWeek/name.js
built-ins/Temporal/Calendar/prototype/inLeapYear/name.js
built-ins/Temporal/Calendar/prototype/daysInMonth/name.js
built-ins/Temporal/Calendar/prototype/year/name.js
built-ins/Temporal/Calendar/prototype/dateUntil/length.js
built-ins/Temporal/Calendar/prototype/dayOfWeek/name.js
built-ins/Temporal/Calendar/prototype/weekOfYear/name.js
built-ins/Temporal/Calendar/prototype/yearOfWeek/name.js
built-ins/Temporal/Calendar/prototype/day/name.js
built-ins/Temporal/Calendar/prototype/daysInYear/name.js
built-ins/Temporal/Calendar/prototype/monthsInYear/name.js
built-ins/Temporal/TimeZone/prototype/getInstantFor/length.js
built-ins/Temporal/ZonedDateTime/from/length.js
built-ins/Temporal/ZonedDateTime/prototype/with/length.js
built-ins/Temporal/ZonedDateTime/prototype/subtract/length.js
built-ins/Temporal/ZonedDateTime/prototype/since/length.js
built-ins/Temporal/ZonedDateTime/prototype/until/length.js
built-ins/Temporal/ZonedDateTime/prototype/valueOf/name.js
built-ins/Temporal/ZonedDateTime/prototype/add/length.js
built-ins/Temporal/Instant/prototype/since/length.js
built-ins/Temporal/Instant/prototype/until/length.js
built-ins/Temporal/Instant/prototype/valueOf/name.js
built-ins/Temporal/PlainTime/from/length.js
built-ins/Temporal/PlainTime/prototype/with/length.js
built-ins/Temporal/PlainTime/prototype/since/length.js
built-ins/Temporal/PlainTime/prototype/until/length.js
built-ins/Temporal/PlainTime/prototype/valueOf/name.js
built-ins/Temporal/PlainDate/from/length.js
built-ins/Temporal/PlainDate/prototype/with/length.js
built-ins/Temporal/PlainDate/prototype/subtract/length.js
built-ins/Temporal/PlainDate/prototype/since/length.js
built-ins/Temporal/PlainDate/prototype/until/length.js
built-ins/Temporal/PlainDate/prototype/valueOf/name.js
built-ins/Temporal/PlainDate/prototype/add/length.js
built-ins/Temporal/Now/timeZoneId/name.js
built-ins/Temporal/Duration/prototype/subtract/length.js
built-ins/Temporal/Duration/prototype/valueOf/name.js
built-ins/Temporal/Duration/prototype/add/length.js
built-ins/Temporal/Duration/compare/length.js
intl402/Temporal/Calendar/prototype/era/name.js
intl402/Temporal/Calendar/prototype/eraYear/name.js
built-ins/Temporal/PlainDate/length.js
built-ins/Temporal/PlainDateTime/length.js
built-ins/Temporal/ZonedDateTime/length.js
built-ins/Temporal/PlainTime/length.js
built-ins/Temporal/PlainMonthDay/length.js
built-ins/Temporal/Duration/length.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/length.js
built-ins/Temporal/PlainYearMonth/prototype/add/length.js

# not allowed to call built-in utilities like Number.isFinite or Math.sign
built-ins/Temporal/Duration/call-builtin.js

# we use array spreading internally
built-ins/Temporal/PlainMonthDay/from/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainMonthDay/prototype/with/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainMonthDay/prototype/toPlainDate/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainMonthDay/prototype/equals/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/from/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/with/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/toPlainMonthDay/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/since/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/withPlainDate/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/until/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/equals/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/prototype/toPlainYearMonth/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDateTime/compare/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/from/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/with/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/toPlainDate/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/subtract/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/since/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/since/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/until/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/until/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/equals/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/prototype/add/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainYearMonth/compare/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/dayOfYear/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/month/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/dateAdd/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/monthCode/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/daysInWeek/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/inLeapYear/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/daysInMonth/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/year/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/dateUntil/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/dayOfWeek/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/weekOfYear/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/yearOfWeek/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/day/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/daysInYear/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Calendar/prototype/monthsInYear/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/TimeZone/prototype/getInstantFor/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/TimeZone/prototype/getPossibleInstantsFor/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/from/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/with/builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/toPlainMonthDay/builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/since/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/withPlainDate/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/until/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/equals/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/prototype/toPlainYearMonth/builtin-calendar-no-array-iteration.js
built-ins/Temporal/ZonedDateTime/compare/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainTime/prototype/toZonedDateTime/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainTime/prototype/toPlainDateTime/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/from/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/prototype/with/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/prototype/toPlainMonthDay/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/prototype/since/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/prototype/until/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/prototype/equals/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/prototype/toPlainYearMonth/builtin-calendar-no-array-iteration.js
built-ins/Temporal/PlainDate/compare/argument-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Duration/prototype/subtract/relativeto-propertybag-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Duration/prototype/total/relativeto-propertybag-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Duration/prototype/add/relativeto-propertybag-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Duration/prototype/round/relativeto-propertybag-builtin-calendar-no-array-iteration.js
built-ins/Temporal/Duration/compare/relativeto-propertybag-builtin-calendar-no-array-iteration.js
intl402/Temporal/Calendar/prototype/era/argument-builtin-calendar-no-array-iteration.js
intl402/Temporal/Calendar/prototype/eraYear/argument-builtin-calendar-no-array-iteration.js
